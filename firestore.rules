rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /setup/defaultSetup {
      // Anyone can read the document
      allow read: if true;

      // Only users with claim.admin can write to the document
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    match /batches/{batchId} {
      // Allow reading by anyone
      allow read: if true;
      // Allow write only if the user is an admin
      allow create, update, delete, write: if request.auth != null && request.auth.token.admin == true;

      // Rules for the invitations sub-collection
      match /invitations/{invitationId} {
        // Allow reading by anyone
        allow read: if true;
        // Allow write only if the user is logged in
        allow write: if request.auth != null;
        allow delete: if request.auth.token.admin == true;
      }
    }
    
    // User collection rules
    match /users/{userId} {
      allow read: if true; // Everyone can read
      allow create: if request.auth.uid == userId || request.auth.token.admin == true; 
      allow update: if request.auth.uid == userId || request.auth.token.admin == true 
				|| request.resource.data.keys().hasOnly(['visits']);

      // Profile sub-collection rules
      match /profiles/{profileId} {
        allow read: if true;
        allow create;
        allow update: if request.auth.uid == userId || request.auth.token.admin == true
					|| request.resource.data.keys().hasOnly(['visits'])
          || (!('addedToContacts' in resource.data) && request.resource.data.addedToContacts == 1)
          || ('addedToContacts' in resource.data && request.resource.data.addedToContacts == resource.data.addedToContacts + 1);
				
        match /contacts/{contactId} {
        	allow create;
          allow read: if request.auth.uid == userId || request.auth.token.admin == true;
          allow update: if request.auth.uid == userId || request.auth.token.admin == true;
          allow delete: if request.auth.uid == userId || request.auth.token.admin == true;
        }

        // Links sub-collection under profile
        match /links/{linkId} {
          allow read: if true;
          allow create: if request.auth.uid == userId || request.auth.token.admin == true;
          allow update: if request.auth.uid == userId || request.auth.token.admin == true 
              || (!('clicked' in resource.data) && request.resource.data.clicked == 1)
              || ('clicked' in resource.data && request.resource.data.clicked == resource.data.clicked + 1);
          allow delete: if request.auth.uid == userId || request.auth.token.admin == true;
        }

        // Visits sub-collection under profile
        match /visits/{visitId} {
          allow read: if true;  // Everyone can read visits
          allow create: if true;  // Everyone can create a visit
          // Assuming you only want the visit's date and device type attributes to be created
          allow update: if false;  // Disallow updates to visits for simplicity
        }

        // ProfileImage sub-collection under profile
        match /profileImage/{imageId} {
          allow read: if true;
          allow create, update: if request.auth.uid == userId || request.auth.token.admin == true;
        }
      }
    }
  }
}